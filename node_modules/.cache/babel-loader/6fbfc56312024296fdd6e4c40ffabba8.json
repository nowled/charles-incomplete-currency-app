{"ast":null,"code":"var _jsxFileName = \"/Users/charlespeterson/Downloads/toptal-currencies-react/src/CurrencyConverter.js\";\nimport { useState, useEffect } from 'react';\nimport styles from './CurrencyConverter.module.css';\nimport PropTypes from 'prop-types';\nimport { getCurrencies, getExchangeRates } from './dataService'; // Build a simple currency converter that will allow users to convert between currencies\n// You are provided with an incomplete <CurrencyConverter /> component.\n// You are not allowed to add any additional HTML elements (you already have all the elements needed).\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1P23Fi6oH_piLeCwi5mMNLLHNI_LACZwF/view?usp=sharing\n// Once the <CurrencyConverter /> component is mounted, load the currency list and exchange rates using the getCurrencies and getExchangeRates functions imported above.\n// Update the currency list in state, this will render the currencies in the select elements provided\n// Update the exchange rates in state to complete the implementation of the getRate function\n// Implement the following functionality:\n//  - As the user types the amount, the conversion should be done instantly using the rate returned from the getRate function\n//  - The conversion must be possible in both directions - if you select USD and EUR, typing a USD amount should calculate the EUR amount, and typing a EUR amount should calculate the USD amount.\n//  - Changing the currency should trigger a recalculation. The amount entered for the currency that was changed should remain, and the other amount should be recalculated.\n//  - Display the rate used for the conversion in the provided div\n//  - All converted amounts should be displayed to 2 decimal places using the round function provided\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencyConverter = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Currency Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: props.currency,\n                onChange: e => props.onCurrencyChange(e.target.value),\n                children: props.currencies.map((currency, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: currency,\n                    children: currency\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: props.amount,\n                onChange: e => props.onAmountChange(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.equalsCell,\n              children: \"=\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: props.currency2,\n                onChange: e => props.onCurrencyChange2(e.target.value),\n                children: props.currencies.map((currency, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: currency,\n                    children: currency\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: props.amount2,\n                onChange: e => props.onAmountChange2(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rate,\n        children: \"Rate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CurrencyConverter;\nCurrencyConverter.propTypes = {\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func,\n  amount2: PropTypes.number.isRequired,\n  currency2: PropTypes.string.isRequired,\n  currencies2: PropTypes.array,\n  onAmountChange2: PropTypes.func,\n  onCurrencyChange2: PropTypes.func\n};\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["useState","useEffect","styles","PropTypes","getCurrencies","getExchangeRates","CurrencyConverter","props","header","table","currency","e","onCurrencyChange","target","value","currencies","map","index","amount","onAmountChange","equalsCell","currency2","onCurrencyChange2","amount2","onAmountChange2","rate","propTypes","number","isRequired","string","array","func","currencies2"],"sources":["/Users/charlespeterson/Downloads/toptal-currencies-react/src/CurrencyConverter.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport styles from './CurrencyConverter.module.css';\nimport PropTypes from 'prop-types';\nimport { getCurrencies, getExchangeRates } from './dataService';\n\n// Build a simple currency converter that will allow users to convert between currencies\n\n// You are provided with an incomplete <CurrencyConverter /> component.\n// You are not allowed to add any additional HTML elements (you already have all the elements needed).\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1P23Fi6oH_piLeCwi5mMNLLHNI_LACZwF/view?usp=sharing\n\n// Once the <CurrencyConverter /> component is mounted, load the currency list and exchange rates using the getCurrencies and getExchangeRates functions imported above.\n// Update the currency list in state, this will render the currencies in the select elements provided\n// Update the exchange rates in state to complete the implementation of the getRate function\n// Implement the following functionality:\n//  - As the user types the amount, the conversion should be done instantly using the rate returned from the getRate function\n//  - The conversion must be possible in both directions - if you select USD and EUR, typing a USD amount should calculate the EUR amount, and typing a EUR amount should calculate the USD amount.\n//  - Changing the currency should trigger a recalculation. The amount entered for the currency that was changed should remain, and the other amount should be recalculated.\n//  - Display the rate used for the conversion in the provided div\n//  - All converted amounts should be displayed to 2 decimal places using the round function provided\n\nconst CurrencyConverter = (props) => {\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Currency Converter</h1>\n      </header>\n      <main>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Currency</th>\n\n              <th>Amount</th>\n              <th></th>\n              <th>Currency</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <select\n                  value={props.currency}\n                  onChange={(e) => props.onCurrencyChange(e.target.value)}\n                >\n                  {props.currencies.map((currency, index) => {\n                    return (\n                      <option value={currency} key={index}>\n                        {currency}\n                      </option>\n                    );\n                  })}\n                </select>\n              </td>\n              <td>\n                <input\n                  value={props.amount}\n                  onChange={(e) => props.onAmountChange(e.target.value)}\n                />\n              </td>\n              <td className={styles.equalsCell}>=</td>\n              <td>\n                <select\n                  value={props.currency2}\n                  onChange={(e) => props.onCurrencyChange2(e.target.value)}\n                >\n                  {props.currencies.map((currency, index) => {\n                    return (\n                      <option value={currency} key={index}>\n                        {currency}\n                      </option>\n                    );\n                  })}\n                </select>\n              </td>\n              <td>\n                <input\n                  value={props.amount2}\n                  onChange={(e) => props.onAmountChange2(e.target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className={styles.rate}>Rate:</div>\n      </main>\n    </div>\n  );\n};\n\nCurrencyConverter.propTypes = {\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func,\n  amount2: PropTypes.number.isRequired,\n  currency2: PropTypes.string.isRequired,\n  currencies2: PropTypes.array,\n  onAmountChange2: PropTypes.func,\n  onCurrencyChange2: PropTypes.func,\n};\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}